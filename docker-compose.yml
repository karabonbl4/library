version: "3.1"
services:
  postgresqldb:
    container_name: postgres-library
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=library
  mongo1:
    image: mongo:7.0
    container_name: mongoDB-library
    hostname: localhost
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodb
      MONGO_INITDB_ROOT_PASSWORD: mongodb
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_cont:/data/db
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
#  mongosetup:
#    image: mongo:latest
#    depends_on:
#      - mongo1
#    volumes:
#      - ./scripts/rs-init.sh:/scripts/rs-init.sh
#    restart: "no"
#    entrypoint: [ "bash", "/scripts/rs-init.sh" ]

  app:
    container_name: tomcat-library
    build:
      dockerfile: Dockerfile
    image: app:latest
    ports:
      - 8080:8080
    depends_on:
      - postgresqldb
      - mongo1
#    volumes:
#      - ./build/libs/library-0.1.jar:/usr/local/tomcat/webapps/library-0.1.jar
#    entrypoint: [ "java", "-jar", "/usr/local/tomcat/webapps/library-0.1.jar"]

  kafka-logger:
    container_name: tomcat-kafka
    image: tomcat:10.1.8-jdk17
    ports:
      - 8081:8081
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
    volumes:
      - ./build/libs/kafka_logger.jar:/usr/local/tomcat/webapps/kafka_logger.jar
    entrypoint: [ "java", "-jar", "/usr/local/tomcat/webapps/kafka_logger.jar"]

  rabbitmq:
    container_name: library-rabbitmq
    image: rabbitmq:3.10-management
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/mnesia/
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 8090:8090
    restart: always
    environment:
      - SERVER_PORT=8090
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - kafka
      - zookeeper

volumes:
  postgres-data:
  mongodb_data_cont: